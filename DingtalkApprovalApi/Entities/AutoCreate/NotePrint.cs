//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具 FreeSql.Generator 生成。
//     运行时版本:3.1.5
//     Website: https://github.com/2881099/FreeSql
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Threading.Tasks;
using Newtonsoft.Json;
using FreeSql.DataAnnotations;
namespace DingtalkApprovalApi.Entities.Dtos {

	[JsonObject(MemberSerialization.OptIn)]
	public partial class NotePrint {

		[JsonProperty, Column(DbType = "nvarchar(50)", IsPrimary = true)]
		public string Guid { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(MAX)")]
		public string ALTERPRINTCOLUMNS { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(MAX)")]
		public string ALTERPRINTFORMULA { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(MAX)")]
		public string ALTERPRINTSUM { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string BranchGuid { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string Code { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(18,0)")]
		public decimal? EndEmptyRowCount { get; set; }

		[JsonProperty, Column(DbType = "varchar(200)")]
		public string FOOTERSHOWFIELDS { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string GroupFieldName { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "decimal(18,0)")]
		public decimal? HeadEmptyRowCount { get; set; }

		[JsonProperty]
		public bool? ISALTERPRINT { get; set; }

		[JsonProperty]
		public bool? IsAppendBlank { get; set; }

		[JsonProperty]
		public bool? IsNewPrint { get; set; }

		[JsonProperty]
		public bool? IsPOS { get; set; }

		[JsonProperty]
		public bool? IsReverse { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string KeyFieldName { get; set; } = string.Empty;

		[JsonProperty]
		public int? LinesPerPage { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string MainKeyFieldName { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string Name { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(50)")]
		public string NEXTNOTEPRINTGUID { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(50)")]
		public string NotePrintTypeGuid { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string Notes { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "image")]
		public byte[] OriginalReportImage { get; set; }

		[JsonProperty, Column(DbType = "image")]
		public byte[] OtherImage { get; set; }

		[JsonProperty, Column(DbType = "nvarchar(10)")]
		public string PortNumber { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(200)")]
		public string PRINTMACHINE { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string QuantityFieldName { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "image")]
		public byte[] ReportImage { get; set; }

		[JsonProperty, Column(DbType = "varchar(MAX)")]
		public string ReportText { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(MAX)")]
		public string RightValue { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(MAX)")]
		public string RIGHTVALUE1 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(100)")]
		public string SizeFieldName { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(MAX)")]
		public string SQLString1 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(MAX)")]
		public string SQLString2 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(MAX)")]
		public string SQLString3 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(MAX)")]
		public string SQLString4 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(MAX)")]
		public string SQLStringAttach { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(MAX)")]
		public string SQLWhereAttach { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(MAX)")]
		public string SQLWhereString1 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(MAX)")]
		public string SQLWhereString2 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(MAX)")]
		public string SQLWhereString3 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "nvarchar(MAX)")]
		public string SQLWhereString4 { get; set; } = string.Empty;

	}

}
