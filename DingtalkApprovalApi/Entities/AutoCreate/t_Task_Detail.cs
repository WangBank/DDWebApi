//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具 FreeSql.Generator 生成。
//     运行时版本:3.1.5
//     Website: https://github.com/2881099/FreeSql
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Reflection;
using System.Threading.Tasks;
using Newtonsoft.Json;
using FreeSql.DataAnnotations;
namespace DingtalkApprovalApi.Entities.Dtos {

	[JsonObject(MemberSerialization.OptIn)]
	public partial class t_Task_Detail {

		[JsonProperty, Column(IsPrimary = true)]
		public int FDetailID { get; set; }

		[JsonProperty, Column(IsPrimary = true)]
		public int FID { get; set; }

		[JsonProperty, Column(IsPrimary = true)]
		public int FType { get; set; }

		[JsonProperty, Column(DbType = "varchar(5000)")]
		public string FAccessSelect { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(2000)")]
		public string FAccessTable { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(1000)")]
		public string FAccessWhere { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(500)")]
		public string FCustom1 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(500)")]
		public string FCustom2 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(500)")]
		public string FCustom3 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(500)")]
		public string FCustom4 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(500)")]
		public string FCustom5 { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(200)")]
		public string FSourceKey { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(5000)")]
		public string FSourceSelect { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(2000)")]
		public string FSourceTable { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(1000)")]
		public string FSourceWhere { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(MAX)")]
		public string FSQL { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(200)")]
		public string FTargetKey { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(5000)")]
		public string FTargetSelect { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(2000)")]
		public string FTargetTable { get; set; } = string.Empty;

		[JsonProperty, Column(DbType = "varchar(1000)")]
		public string FTargetWhere { get; set; } = string.Empty;

		[JsonProperty]
		public int? FUpdateMode { get; set; }

		[JsonProperty, Column(DbType = "varchar(200)")]
		public string Notes { get; set; } = string.Empty;

	}

}
